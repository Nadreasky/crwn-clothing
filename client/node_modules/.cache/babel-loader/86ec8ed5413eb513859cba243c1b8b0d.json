{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBAW7QPzqMfkFDDswtypLpcJija8ZOGX5U\",\n  authDomain: \"crwn-db-71b28.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-71b28.firebaseio.com\",\n  projectId: \"crwn-db-71b28\",\n  storageBucket: \"crwn-db-71b28.appspot.com\",\n  messagingSenderId: \"178637513796\",\n  appId: \"1:178637513796:web:420fd8015627315c1f8811\",\n  measurementId: \"G-BYNRWEFJEB\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  console.log(firestore.doc('users/12fsdf4f')); // const userRef = firestore.doc(`user/${userAuth.uid}`);\n  // const snapshot = await userRef.get();\n  // if (!snapshot.exists()) {\n  //   const { displayName, email } = userAuth;\n  //   const createAt = new Date();\n  //   try {\n  //     await userRef.set({\n  //       displayName,\n  //       email,\n  //       createAt,\n  //       ...additionalData\n  //     })\n  //   } catch (error) {\n  //     console.log('Error creating user', error.message);\n  //   }\n  // }\n  // return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["D:/ReactJS/Projects/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","console","log","firestore","doc","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,+BAFC;AAGbC,EAAAA,WAAW,EAAE,sCAHA;AAIbC,EAAAA,SAAS,EAAE,eAJE;AAKbC,EAAAA,aAAa,EAAE,2BALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AAEfE,EAAAA,OAAO,CAACC,GAAR,CAAYC,SAAS,CAACC,GAAV,CAAc,gBAAd,CAAZ,EAH2E,CAK3E;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACD,CA1BM;AA4BPhB,QAAQ,CAACiB,aAAT,CAAuBhB,MAAvB;AAEA,OAAO,MAAMiB,IAAI,GAAGlB,QAAQ,CAACkB,IAAT,EAAb;AACP,OAAO,MAAMH,SAAS,GAAGf,QAAQ,CAACe,SAAT,EAAlB;AAEP,MAAMI,QAAQ,GAAG,IAAInB,QAAQ,CAACkB,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAenB,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyBAW7QPzqMfkFDDswtypLpcJija8ZOGX5U\",\r\n  authDomain: \"crwn-db-71b28.firebaseapp.com\",\r\n  databaseURL: \"https://crwn-db-71b28.firebaseio.com\",\r\n  projectId: \"crwn-db-71b28\",\r\n  storageBucket: \"crwn-db-71b28.appspot.com\",\r\n  messagingSenderId: \"178637513796\",\r\n  appId: \"1:178637513796:web:420fd8015627315c1f8811\",\r\n  measurementId: \"G-BYNRWEFJEB\"\r\n}\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  if (!userAuth) return;\r\n\r\n  console.log(firestore.doc('users/12fsdf4f'));\r\n\r\n  // const userRef = firestore.doc(`user/${userAuth.uid}`);\r\n\r\n  // const snapshot = await userRef.get();\r\n\r\n  // if (!snapshot.exists()) {\r\n  //   const { displayName, email } = userAuth;\r\n  //   const createAt = new Date();\r\n\r\n  //   try {\r\n  //     await userRef.set({\r\n  //       displayName,\r\n  //       email,\r\n  //       createAt,\r\n  //       ...additionalData\r\n  //     })\r\n  //   } catch (error) {\r\n  //     console.log('Error creating user', error.message);\r\n  //   }\r\n  // }\r\n\r\n  // return userRef;\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account'});\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}