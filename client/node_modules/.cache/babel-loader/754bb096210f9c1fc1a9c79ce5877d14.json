{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error.message));\n  }\n}\nexport function* onEmailSignStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignStart)]);\n}","map":{"version":3,"sources":["D:/ReactJS/Projects/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","auth","googleProvider","createUserProfileDocument","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","message","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,kBAAnD,EAAuEC,kBAAvE,QAAiG,gBAAjG;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAAvB;AACA,UAAMK,OAAO,GAAG,MAAMZ,IAAI,CAACQ,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACI,mBAAmB,CAAC;AAC5Ba,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADW;AAE5B,SAAGF,YAAY,CAACG,IAAb;AAFyB,KAAD,CAApB,CAAT;AAID,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMnB,GAAG,CAACK,mBAAmB,CAACc,KAAK,CAACC,OAAP,CAApB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMtB,UAAU,CACdI,eAAe,CAACmB,oBADF,EAEdX,gBAFc,CAAhB;AAID;AAED,OAAO,UAAUY,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA2D;AAChE,MAAI;AACF,UAAM;AAAEd,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACmB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMZ,OAAO,GAAG,MAAMZ,IAAI,CAACQ,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACM,kBAAkB,CAAC;AAC3BW,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADU;AAE3B,SAAGF,YAAY,CAACG,IAAb;AAFwB,KAAD,CAAnB,CAAT;AAID,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMnB,GAAG,CAACO,kBAAkB,CAACY,KAAK,CAACC,OAAP,CAAnB,CAAT;AACD;AACF;AAED,OAAO,UAAUQ,gBAAV,GAA6B;AAClC,QAAM7B,UAAU,CACdI,eAAe,CAAC0B,mBADF,EAEdN,eAFc,CAAhB;AAID;AAED,OAAO,UAAUO,SAAV,GAAsB;AAC3B,QAAM7B,GAAG,CAAC,CACRC,IAAI,CAACmB,mBAAD,CADI,EAERnB,IAAI,CAAC0B,gBAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\r\n\r\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(googleSignInSuccess({\r\n      id: userSnapshot.id,\r\n      ...userSnapshot.data()\r\n    }));\r\n  } catch (error) {\r\n    yield put(googleSignInFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(\r\n    UserActionTypes.GOOGLE_SIGN_IN_START,\r\n    signInWithGoogle\r\n  );\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password }}) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(emailSignInSuccess({\r\n      id: userSnapshot.id,\r\n      ...userSnapshot.data()\r\n    }));\r\n  } catch (error) {\r\n    yield put(emailSignInFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* onEmailSignStart() {\r\n  yield takeLatest(\r\n    UserActionTypes.EMAIL_SIGN_IN_START,\r\n    signInWithEmail\r\n  );\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([\r\n    call(onGoogleSignInStart),\r\n    call(onEmailSignStart)\r\n  ]);\r\n}"]},"metadata":{},"sourceType":"module"}