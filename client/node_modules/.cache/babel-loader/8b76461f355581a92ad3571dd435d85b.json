{"ast":null,"code":"import ShopActionTypes from './shop.types';\nconst INITIAL_STATE = {\n  collections: null,\n  isFetching: false,\n  errorMessage: undefined\n};\n\nconst shopReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ShopActionTypes.FETCH_COLLECTIONS_START:\n      {\n        return { ...state,\n          isFetching: true\n        };\n      }\n\n    case ShopActionTypes.FETCH_COLLECTIONS_SUCCESS:\n      {\n        return { ...state,\n          collections: action.payload,\n          isFetching: false\n        };\n      }\n\n    case ShopActionTypes.FETCH_COLLECTIONS_FAILURE:\n      {\n        return { ...state,\n          isFetching: false,\n          errorMessage: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;","map":{"version":3,"sources":["D:/ReactJS/Projects/crwn-clothing/client/src/redux/shop/shop.reducer.js"],"names":["ShopActionTypes","INITIAL_STATE","collections","isFetching","errorMessage","undefined","shopReducer","state","action","type","FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","payload","FETCH_COLLECTIONS_FAILURE"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,WAAW,EAAE,IADO;AAEpBC,EAAAA,UAAU,EAAE,KAFQ;AAGpBC,EAAAA,YAAY,EAAEC;AAHM,CAAtB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,aAAT,EAAwBO,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,eAAe,CAACU,uBAArB;AAA8C;AAC5C,eAAO,EACL,GAAGH,KADE;AAELJ,UAAAA,UAAU,EAAE;AAFP,SAAP;AAID;;AACD,SAAKH,eAAe,CAACW,yBAArB;AAAgD;AAC9C,eAAO,EACL,GAAGJ,KADE;AAELL,UAAAA,WAAW,EAAEM,MAAM,CAACI,OAFf;AAGLT,UAAAA,UAAU,EAAE;AAHP,SAAP;AAKD;;AACD,SAAKH,eAAe,CAACa,yBAArB;AAAgD;AAC9C,eAAO,EACL,GAAGN,KADE;AAELJ,UAAAA,UAAU,EAAE,KAFP;AAGLC,UAAAA,YAAY,EAAEI,MAAM,CAACI;AAHhB,SAAP;AAKD;;AACD;AACE,aAAOL,KAAP;AAtBJ;AAwBD,CAzBD;;AA2BA,eAAeD,WAAf","sourcesContent":["import ShopActionTypes from './shop.types';\r\n\r\nconst INITIAL_STATE = {\r\n  collections: null,\r\n  isFetching: false,\r\n  errorMessage: undefined\r\n}\r\n\r\nconst shopReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case ShopActionTypes.FETCH_COLLECTIONS_START: {\r\n      return {\r\n        ...state,\r\n        isFetching: true\r\n      };\r\n    }\r\n    case ShopActionTypes.FETCH_COLLECTIONS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        collections: action.payload,\r\n        isFetching: false\r\n      };\r\n    }\r\n    case ShopActionTypes.FETCH_COLLECTIONS_FAILURE: {\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        errorMessage: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default shopReducer;"]},"metadata":{},"sourceType":"module"}